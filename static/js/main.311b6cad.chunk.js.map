{"version":3,"sources":["components/Login.js","components/Square.js","components/Board.js","components/EndGame.js","components/NavBar.js","components/Game.js","components/AppFooter.js","TicTacToe.js","index.js"],"names":["Login","toggleChecked","useState","player","setPlayer","secondPlayer","setSecondPlayer","className","value","onChange","e","target","required","type","onClick","preventDefault","test","localStorage","setItem","Square","Board","squares","handleClick","map","square","i","EndGame","setShow","setBoard","setMsg","calculateWinner","board","current","wins","showMessage","setShowMessage","status","every","Boolean","getStatus","Array","fill","window","location","reload","NavBar","counterPlayerOne","counterPlayerTwo","counterDraw","playerOne","getItem","playerTwo","Game","xIsNext","setXisNext","msg","setCounterPlayerOne","setCounterPlayerTwo","setCounterDraw","show","setWins","today","Date","date","toLocaleDateString","time","getHours","getMinutes","lines","length","a","b","c","winner","useEffect","prevScore","JSON","parse","stringify","onunload","removeItem","ShowToggle","boardCopy","AppFooter","TicTacToe","showComponent","setShowComponent","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.311b6cad.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Login = ({ toggleChecked }) => {\r\n\r\n    const [player, setPlayer] = useState(\"\");\r\n    const [secondPlayer, setSecondPlayer] = useState(\"\");\r\n\r\n\r\n    const SaveData = () => {\r\n        localStorage.setItem(\"player\", player);\r\n        localStorage.setItem(\"secondPlayer\", secondPlayer);\r\n    }\r\n\r\n    const SubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (/^$/.test(player) || /^$/.test(secondPlayer)) {\r\n        } else {\r\n            setPlayer(player);\r\n            setSecondPlayer(secondPlayer);\r\n            SaveData();\r\n            toggleChecked();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <form className=\"login-form\">\r\n                <h1 className=\"welcome-message\">Welcome to Tic Tac Toe</h1>\r\n                <p className=\"instructions-message\">Please enter player names and click start to play</p>\r\n                <br />\r\n                <label className=\"player1\">\r\n                    Name Player 1:\r\n                    <input value={player} onChange={(e) => setPlayer(e.target.value)} required />\r\n                </label>\r\n                <br />\r\n                <label className=\"player2\">\r\n                    Name Player 2:\r\n                    <input value={secondPlayer} onChange={(e) => setSecondPlayer(e.target.value)} required />\r\n                </label>\r\n                <br />\r\n                <button className=\"start-button\" type=\"submit\" onClick={SubmitHandler}>START</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import React from \"react\";\r\n\r\nconst Square = ({ value, onClick }) => (\r\n    <button className=\"square-button\" onClick={() => onClick()}>\r\n        {value}\r\n    </button >\r\n);\r\n\r\nexport default Square;","import React from \"react\";\r\nimport Square from \"./Square\"\r\n\r\nconst Board = ({ squares, handleClick, toggleChecked }) => (\r\n    <div className=\"board\">\r\n        {squares.map((square, i) => (\r\n            <Square key={i} value={square} onClick={() => handleClick(i)} toggleChecked={toggleChecked} />\r\n        ))}\r\n    </div>\r\n);\r\n\r\nexport default Board;","import React, { useState } from \"react\";\r\n\r\nconst EndGame = ({ setShow, setBoard, setMsg, calculateWinner, board, current, wins }) => {\r\n\r\n    const [showMessage, setShowMessage] = useState(false);\r\n\r\n    const Message = () => {\r\n        setShowMessage(showMessage => !showMessage);\r\n    }\r\n\r\n    const TryAgainHandler = () => {\r\n        setBoard(Array(9).fill(null));\r\n        setShow();\r\n        setMsg(\"\");\r\n    }\r\n\r\n    const getStatus = (board) => {\r\n        const winner = calculateWinner(board)\r\n        if (winner) {\r\n            return `Congratulations ${current} you won `\r\n        } else if (board.every(Boolean)) {\r\n            return `Draw`\r\n        }\r\n    }\r\n\r\n    const status = getStatus(board);\r\n\r\n    const clickHandler = () => {\r\n        setShowMessage(false);\r\n    }\r\n\r\n    const Reset = () => {\r\n        window.location.reload();\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"end-game\">\r\n            <p className=\"status\">{status}</p>\r\n            <div className=\"div-buttons\">\r\n                <button\r\n                    className=\"retry-button\"\r\n                    onClick={TryAgainHandler}>\r\n                    TRY AGAIN\r\n                </button>\r\n                {!showMessage && <button className=\"history-button\" onClick={() => { clickHandler(); Message(); }}>GAME HISTORY</button>}\r\n                <button className=\"reset-button\" onClick={Reset}>RESET</button>\r\n            </div>\r\n            {showMessage && <div className=\"wins\">\r\n                <ul>\r\n                    {wins.map((wins, i) => (\r\n                        <li className=\"win-messages\" key={i}>\r\n                            <span>{wins}</span>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>}\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default EndGame;","import React from \"react\";\r\n\r\n\r\nconst NavBar = ({ counterPlayerOne, counterPlayerTwo, counterDraw }) => {\r\n\r\n    const playerOne = localStorage.getItem(\"player\");\r\n    const playerTwo = localStorage.getItem(\"secondPlayer\");\r\n    const draw = \"Draw\";\r\n\r\n\r\n\r\n    return (\r\n        <nav>\r\n\r\n            <ul className=\"navbar-list\">\r\n                <li className=\"game-name\">Tic Tac Toe</li>\r\n                <li className=\"players-win\">{playerOne} {counterPlayerOne} - {counterPlayerTwo} {playerTwo}</li>\r\n                <li className=\"players-draw\">{draw}: {counterDraw} </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default NavBar;","import React, { useState, useEffect } from \"react\";\r\nimport Board from \"./Board\";\r\nimport EndGame from \"./EndGame\";\r\nimport NavBar from \"./NavBar\";\r\n\r\nconst Game = () => {\r\n\r\n    const [board, setBoard] = useState(Array(9).fill(null));\r\n    const [xIsNext, setXisNext] = useState(true);\r\n    const [msg, setMsg] = useState(\"\");\r\n    const [counterPlayerOne, setCounterPlayerOne] = useState(0);\r\n    const [counterPlayerTwo, setCounterPlayerTwo] = useState(0);\r\n    const [counterDraw, setCounterDraw] = useState(0);\r\n    const [show, setShow] = useState(false);\r\n    const [wins, setWins] = useState([]);\r\n\r\n\r\n    const playerOne = localStorage.getItem(\"player\");\r\n    const playerTwo = localStorage.getItem(\"secondPlayer\");\r\n    const draw = \"Draw\";\r\n\r\n    let today = new Date();\r\n    let date = new Date().toLocaleDateString();\r\n    let time = today.getHours() + \":\" + today.getMinutes();\r\n\r\n\r\n    const current = (xIsNext ? playerTwo : playerOne);\r\n\r\n\r\n\r\n    const ShowToggle = () => {\r\n        setShow(show => !show);\r\n    }\r\n\r\n\r\n\r\n    const calculateWinner = (squares) => {\r\n        const lines = [\r\n            [0, 1, 2],\r\n            [3, 4, 5],\r\n            [6, 7, 8],\r\n            [0, 3, 6],\r\n            [1, 4, 7],\r\n            [2, 5, 8],\r\n            [0, 4, 8],\r\n            [2, 4, 6],\r\n        ];\r\n        for (let i = 0; i < lines.length; i++) {\r\n            const [a, b, c] = lines[i];\r\n            if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n                return squares[a];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    const winner = calculateWinner(board);\r\n\r\n    const handleClick = (i) => {\r\n        const boardCopy = [...board];\r\n        if (boardCopy[i]) return setMsg(\"Choose unoccupied cell!\");\r\n        if (winner) return;\r\n        boardCopy[i] = xIsNext ? \"X\" : \"O\";\r\n        setBoard(boardCopy);\r\n        setXisNext(!xIsNext);\r\n        setMsg(\"\");\r\n\r\n    };\r\n\r\n    const versus = \"vs\";\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (winner && !xIsNext) {\r\n            setCounterPlayerOne((prevScore) => prevScore + 1);\r\n            setShow(true);\r\n            setWins(wins => [...wins, (date + \" \" + time + \" \" + playerOne + \" \" + versus + \" \" + playerTwo + \" \" + current)]);\r\n        } else if (winner && xIsNext) {\r\n            setCounterPlayerTwo((prevScore) => prevScore + 1);\r\n            setShow(true);\r\n            setWins(wins => [...wins, (date + \" \" + time + \" \" + playerOne + \" \" + versus + \" \" + playerTwo + \" \" + current)]);\r\n        } else if (board.every(Boolean)) {\r\n            setCounterDraw((prevScore) => prevScore + 1);\r\n            setShow(true);\r\n            setWins(wins => [...wins, (date + \" \" + time + \" \" + playerOne + \" \" + versus + \" \" + playerTwo + \" \" + draw)]);\r\n        }\r\n    }, [winner, xIsNext, board, current, date, time, playerOne, playerTwo, wins.winner])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const wins = localStorage.getItem('wins')\r\n\r\n        if (wins) {\r\n            setWins(JSON.parse(wins))\r\n        }\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n        localStorage.setItem('wins', JSON.stringify(wins))\r\n\r\n    })\r\n\r\n    window.onunload = function () {\r\n        localStorage.removeItem('wins')\r\n    }\r\n\r\n    return (\r\n        <div className=\"board-container\">\r\n            <NavBar\r\n                counterPlayerOne={counterPlayerOne}\r\n                counterPlayerTwo={counterPlayerTwo}\r\n                counterDraw={counterDraw}\r\n            />\r\n            {!show && <p className=\"next-player\">{xIsNext ? playerOne + \" is on the move with X\" : playerTwo + \" is on the move with O\"}</p>}\r\n            {show && <EndGame\r\n                ShowToggle={ShowToggle}\r\n                setBoard={setBoard}\r\n                setMsg={setMsg}\r\n                calculateWinner={calculateWinner}\r\n                board={board}\r\n                current={current}\r\n                setShow={setShow}\r\n                wins={wins}\r\n            />}\r\n            <br />\r\n            {!show && <Board\r\n                handleClick={handleClick}\r\n                squares={board} />}\r\n            <p className=\"message\">{msg}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Game;","const AppFooter = () => {\r\n    return <footer>Paragon Tic Tac Toe 2021 @ Copyright, All rights reserved</footer>;\r\n};\r\n\r\nexport default AppFooter;","import React, { useState } from 'react';\r\nimport './style/Login.css';\r\nimport \"./style/Board.css\";\r\nimport \"./style/NavBar.css\";\r\nimport \"./style/EndGame.css\";\r\nimport \"./style/History.css\";\r\nimport Login from './components/Login';\r\nimport Game from './components/Game';\r\nimport AppFooter from './components/AppFooter';\r\n\r\nconst TicTacToe = () => {\r\n\r\n  const [showComponent, setShowComponent] = useState(false);\r\n\r\n  const toggleChecked = () => {\r\n    setShowComponent(showComponent => !showComponent);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {!showComponent && <Login toggleChecked={toggleChecked} />}\r\n      {showComponent && <Game />}\r\n      {showComponent && <AppFooter />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TicTacToe;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style/Login.css';\r\nimport TicTacToe from './TicTacToe';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <TicTacToe />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}